{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":" chapter02_mathematical-building-blocks-parte1.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.7.0"},"accelerator":"TPU"},"cells":[{"cell_type":"markdown","metadata":{"id":"Xxpld3g4EqwJ"},"source":["This is a companion notebook for the book [Deep Learning with Python, Second Edition](https://www.manning.com/books/deep-learning-with-python-second-edition?a_aid=keras&a_bid=76564dff). For readability, it only contains runnable code blocks and section titles, and omits everything else in the book: text paragraphs, figures, and pseudocode.\n","\n","**If you want to be able to follow what's going on, I recommend reading the notebook side by side with your copy of the book.**\n","\n","This notebook was generated for TensorFlow 2.6."]},{"cell_type":"markdown","metadata":{"id":"-rkT0IKaEqwN"},"source":["# The mathematical building blocks of neural networks"]},{"cell_type":"markdown","metadata":{"id":"OmN42SGREqwN"},"source":["## A first look at a neural network"]},{"cell_type":"markdown","metadata":{"id":"bH4wptDQEqwO"},"source":["**Loading the MNIST dataset in Keras**"]},{"cell_type":"code","metadata":{"id":"4_5uoM5tEqwO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634135214874,"user_tz":180,"elapsed":2824,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"80cd368a-b0b9-4452-92f2-ee0faca8c831"},"source":["from tensorflow.keras.datasets import mnist\n","(train_images, train_labels), (test_images, test_labels) = mnist.load_data()"],"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/mnist.npz\n","11493376/11490434 [==============================] - 0s 0us/step\n","11501568/11490434 [==============================] - 0s 0us/step\n"]}]},{"cell_type":"markdown","metadata":{"id":"T9NKwnlb8VBR"},"source":["1) Dado o tensor que representa as imagens de treino e teste, apresente para os dados de treino e de teste:"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nc59zH5MEAPn","executionInfo":{"status":"ok","timestamp":1634135454633,"user_tz":180,"elapsed":243,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"6298c5b1-dae7-4629-e8e4-1e745f151d6e"},"source":["train_images[0,:,:]"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   3,\n","         18,  18,  18, 126, 136, 175,  26, 166, 255, 247, 127,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  30,  36,  94, 154, 170,\n","        253, 253, 253, 253, 253, 225, 172, 253, 242, 195,  64,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,  49, 238, 253, 253, 253, 253,\n","        253, 253, 253, 253, 251,  93,  82,  82,  56,  39,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,  18, 219, 253, 253, 253, 253,\n","        253, 198, 182, 247, 241,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  80, 156, 107, 253, 253,\n","        205,  11,   0,  43, 154,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,  14,   1, 154, 253,\n","         90,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0, 139, 253,\n","        190,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  11, 190,\n","        253,  70,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  35,\n","        241, 225, 160, 108,   1,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","         81, 240, 253, 253, 119,  25,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,  45, 186, 253, 253, 150,  27,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,  16,  93, 252, 253, 187,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0, 249, 253, 249,  64,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,  46, 130, 183, 253, 253, 207,   2,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  39,\n","        148, 229, 253, 253, 253, 250, 182,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  24, 114, 221,\n","        253, 253, 253, 253, 201,  78,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,  23,  66, 213, 253, 253,\n","        253, 253, 198,  81,   2,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,  18, 171, 219, 253, 253, 253, 253,\n","        195,  80,   9,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,  55, 172, 226, 253, 253, 253, 253, 244, 133,\n","         11,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0, 136, 253, 253, 253, 212, 135, 132,  16,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0],\n","       [  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n","          0,   0]], dtype=uint8)"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","metadata":{"id":"Od-k7gmR80w_"},"source":["a) O número de amostras."]},{"cell_type":"code","metadata":{"id":"bz6po6m--5sg","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634135496558,"user_tz":180,"elapsed":243,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"44db661b-7b08-4980-d6fb-7e3f31c4b8a6"},"source":["train_images.shape[0]"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["60000"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"eVEvTcqZ9mE8"},"source":["b) A quantidade de eixos (ou rank)."]},{"cell_type":"code","metadata":{"id":"2md4wdlV-6UW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634135418732,"user_tz":180,"elapsed":242,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"1eabf5c8-4f26-4638-e495-e9c34b6306b1"},"source":["train_images.ndim"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["3"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"AB7mwzbQ91BU"},"source":["c) O número de dimensões de cada eixo."]},{"cell_type":"code","metadata":{"id":"h5WGe1TE-68N","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634135506005,"user_tz":180,"elapsed":244,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"a4ae5b24-176c-478e-9c0d-79e377abeeaa"},"source":["train_images.shape"],"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(60000, 28, 28)"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"OyM4hWIh-2nY"},"source":["d) As labels (ou classes)."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zrXEviT-ESTt","executionInfo":{"status":"ok","timestamp":1634135543898,"user_tz":180,"elapsed":252,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"f4904299-aebe-4031-e0fa-df5af1e02ee7"},"source":["train_labels"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([5, 0, 4, ..., 5, 6, 8], dtype=uint8)"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","metadata":{"id":"p_CHy2VkEqwT"},"source":["**The network architecture**"]},{"cell_type":"markdown","metadata":{"id":"EWM2S1OQBNnz"},"source":["2) Defina a arquitetura da rede preenchendo o valor do parâmetro referente a função de ativação da última camada, conforme exemplo visto."]},{"cell_type":"code","metadata":{"id":"qZaqYriyEqwT","executionInfo":{"status":"ok","timestamp":1634135829871,"user_tz":180,"elapsed":648,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}}},"source":["from tensorflow import keras\n","from tensorflow.keras import layers\n","model = keras.Sequential([\n","    layers.Dense(512, activation=\"relu\"),\n","    layers.Dense(10, activation=\"softmax\")\n","])"],"execution_count":13,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"iZqAXK1nEqwT"},"source":["**The compilation step**"]},{"cell_type":"markdown","metadata":{"id":"iQlgI_ikBJpH"},"source":["3) Compile o modelo preenchendo o valor dos parâmetros referentes ao otimizador e a função de perda, conforme o exemplo visto."]},{"cell_type":"code","metadata":{"id":"eKPfThJcEqwU","executionInfo":{"status":"ok","timestamp":1634136387093,"user_tz":180,"elapsed":249,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}}},"source":["model.compile(optimizer=\"rmsprop\" , loss=\"sparse_categorical_crossentropy\"  , metrics=[\"accuracy\", \"top_k_categorical_accuracy\"])"],"execution_count":20,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"itDImJd3EqwU"},"source":["**Preparing the image data**"]},{"cell_type":"code","metadata":{"id":"wRAWiliiEqwU","executionInfo":{"status":"ok","timestamp":1634136039257,"user_tz":180,"elapsed":261,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}}},"source":["train_images = train_images.reshape((60000, 28 * 28))\n","train_images = train_images.astype(\"float32\") / 255\n","test_images = test_images.reshape((10000, 28 * 28))\n","test_images = test_images.astype(\"float32\") / 255"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XQWLvyQeGTdB","executionInfo":{"status":"ok","timestamp":1634136052236,"user_tz":180,"elapsed":241,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"1d3740ce-5868-43a6-d894-c1d785e90a2d"},"source":["train_images.ndim"],"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["2"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","metadata":{"id":"2_9-00TYEqwV"},"source":["**\"Fitting\" the model**"]},{"cell_type":"markdown","metadata":{"id":"2sMkp85pB91f"},"source":["4) Treine o modelo usando os dados de treino, 7 épocas e um tamanho de batch de 256."]},{"cell_type":"code","metadata":{"id":"fKeDSghyEqwV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634136530075,"user_tz":180,"elapsed":41383,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"00d4b74b-4d16-45b8-aaf7-f085fb133365"},"source":["model.fit(x=train_images,y=train_labels , epochs=7, batch_size=256, validation_split=0.1)"],"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/7\n","211/211 [==============================] - 3s 16ms/step - loss: 0.0041 - accuracy: 0.9990 - top_k_categorical_accuracy: 0.2523 - val_loss: 0.0053 - val_accuracy: 0.9987 - val_top_k_categorical_accuracy: 0.2820\n","Epoch 2/7\n","211/211 [==============================] - 3s 15ms/step - loss: 0.0032 - accuracy: 0.9994 - top_k_categorical_accuracy: 0.2576 - val_loss: 0.0063 - val_accuracy: 0.9987 - val_top_k_categorical_accuracy: 0.2685\n","Epoch 3/7\n","211/211 [==============================] - 3s 15ms/step - loss: 0.0026 - accuracy: 0.9993 - top_k_categorical_accuracy: 0.2568 - val_loss: 0.0055 - val_accuracy: 0.9993 - val_top_k_categorical_accuracy: 0.2298\n","Epoch 4/7\n","211/211 [==============================] - 3s 15ms/step - loss: 0.0020 - accuracy: 0.9995 - top_k_categorical_accuracy: 0.2591 - val_loss: 0.0079 - val_accuracy: 0.9987 - val_top_k_categorical_accuracy: 0.2962\n","Epoch 5/7\n","211/211 [==============================] - 3s 15ms/step - loss: 0.0017 - accuracy: 0.9996 - top_k_categorical_accuracy: 0.2544 - val_loss: 0.0106 - val_accuracy: 0.9968 - val_top_k_categorical_accuracy: 0.2507\n","Epoch 6/7\n","211/211 [==============================] - 3s 15ms/step - loss: 9.9993e-04 - accuracy: 0.9998 - top_k_categorical_accuracy: 0.2727 - val_loss: 0.0066 - val_accuracy: 0.9985 - val_top_k_categorical_accuracy: 0.2653\n","Epoch 7/7\n","211/211 [==============================] - 3s 15ms/step - loss: 0.0011 - accuracy: 0.9998 - top_k_categorical_accuracy: 0.2681 - val_loss: 0.0162 - val_accuracy: 0.9943 - val_top_k_categorical_accuracy: 0.2307\n"]},{"output_type":"execute_result","data":{"text/plain":["<keras.callbacks.History at 0x7f1dd8650910>"]},"metadata":{},"execution_count":22}]},{"cell_type":"markdown","metadata":{"id":"YnEdEu-rEqwV"},"source":["**Using the model to make predictions**"]},{"cell_type":"markdown","metadata":{"id":"x3dW5r_ECLDl"},"source":["5) Selecione 5 amostras de teste e utilize o modelo para prever suas classes. Apresente as classes preditas, os valores reais da classe das amostras escolhidas e a imagem referente à amostra."]},{"cell_type":"code","metadata":{"id":"P58ZJJYpEqwV","executionInfo":{"status":"ok","timestamp":1634136602807,"user_tz":180,"elapsed":240,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}}},"source":["predicoes = model.predict(test_images[:5])"],"execution_count":24,"outputs":[]},{"cell_type":"code","metadata":{"id":"EPi8Z3CZIbop","executionInfo":{"status":"ok","timestamp":1634136618269,"user_tz":180,"elapsed":242,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}}},"source":["import numpy as np"],"execution_count":25,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0r5lsDcOIfkh","executionInfo":{"status":"ok","timestamp":1634136642111,"user_tz":180,"elapsed":244,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"82b5df5b-bc21-4411-c3d7-9afa5002095c"},"source":["np.argmax(predicoes, axis=1)"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([7, 2, 1, 0, 4])"]},"metadata":{},"execution_count":28}]},{"cell_type":"markdown","metadata":{"id":"R-YMUt-DEqwW"},"source":["**Evaluating the model on new data**"]},{"cell_type":"markdown","metadata":{"id":"RDUjibEbDTtR"},"source":["6) Avalie o modelo usando os dados de teste. Imprima a curácia obtida."]},{"cell_type":"code","metadata":{"id":"Tnck8ox1EqwW","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1634136707275,"user_tz":180,"elapsed":1455,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"e17532d0-d334-4ad4-93de-c0ec858f9ec6"},"source":["test_loss, test_acc, test_topk = model.evaluate(test_images,test_labels)"],"execution_count":31,"outputs":[{"output_type":"stream","name":"stdout","text":["313/313 [==============================] - 1s 3ms/step - loss: 0.0993 - accuracy: 0.9796 - top_k_categorical_accuracy: 0.2337\n"]}]},{"cell_type":"code","metadata":{"id":"pWfc7eXaI2Gh","executionInfo":{"status":"ok","timestamp":1634136713805,"user_tz":180,"elapsed":249,"user":{"displayName":"Livia Cruz","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgZP1DcrUadZIqPLWDpJTu0FUVeZTr9DMH25FG_UQ=s64","userId":"04538902551424059914"}},"outputId":"272e5785-60ad-4123-c4ff-542e258ab566","colab":{"base_uri":"https://localhost:8080/"}},"source":["test_loss, test_acc, test_topk "],"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.09933841228485107, 0.9796000123023987, 0.2337000072002411)"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","metadata":{"id":"k66Nl_pjEqwW"},"source":["## Data representations for neural networks"]},{"cell_type":"markdown","metadata":{"id":"Jn5uV5aSD0EA"},"source":["O código a seguir traz um exemplo de tensores com diferentes ranks, apenas execute."]},{"cell_type":"markdown","metadata":{"id":"xJb4sIP9EqwX"},"source":["### Scalars (rank-0 tensors)"]},{"cell_type":"code","metadata":{"id":"klHEXED8EqwX"},"source":["import numpy as np\n","x = np.array(12)\n","x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"fcS3f7MuEqwX"},"source":["x.ndim"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"jjs1hxpGEqwX"},"source":["### Vectors (rank-1 tensors)"]},{"cell_type":"code","metadata":{"id":"y6JUE6NlEqwX"},"source":["x = np.array([12, 3, 6, 14, 7])\n","x"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gDw-SXU9EqwX"},"source":["x.ndim"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"cbLa_5o8EqwX"},"source":["### Matrices (rank-2 tensors)"]},{"cell_type":"code","metadata":{"id":"Rzg78xp5EqwX"},"source":["x = np.array([[5, 78, 2, 34, 0],\n","              [6, 79, 3, 35, 1],\n","              [7, 80, 4, 36, 2]])\n","x.ndim"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"H2LKMUYuEqwY"},"source":["### Rank-3 and higher-rank tensors"]},{"cell_type":"code","metadata":{"id":"id6vDR3mEqwY"},"source":["x = np.array([[[5, 78, 2, 34, 0],\n","               [6, 79, 3, 35, 1],\n","               [7, 80, 4, 36, 2]],\n","              [[5, 78, 2, 34, 0],\n","               [6, 79, 3, 35, 1],\n","               [7, 80, 4, 36, 2]],\n","              [[5, 78, 2, 34, 0],\n","               [6, 79, 3, 35, 1],\n","               [7, 80, 4, 36, 2]]])\n","x.ndim"],"execution_count":null,"outputs":[]}]}